import logging

from aiogram import Router
from aiogram.filters import Command, StateFilter
from aiogram.fsm.context import FSMContext
from aiogram.fsm.state import default_state
from aiogram.types import Message, KeyboardButton, ReplyKeyboardRemove
from aiogram.utils.keyboard import ReplyKeyboardBuilder
from sqlalchemy.ext.asyncio import AsyncSession

from handlers.common_handlers import partner_selected
from services.auth_service import AuthService
from services.role_service import RoleService
from services.coupon_service import CouponService
from utils.keyboards import main_menu
from utils.states import RegistrationStates

logger = logging.getLogger(__name__)
router = Router()

@router.message(Command("start"))
async def start(message: Message, session: AsyncSession, state: FSMContext):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start —Å —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–µ–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ –æ–±—Ä–∞–±–æ—Ç–∫–æ–π deep-link"""
    # –û–±—Ä–∞–±–æ—Ç–∫–∞ deep-link –¥–ª—è –∫—É–ø–æ–Ω–∞
    args = message.text.split()
    if len(args) > 1 and args[1].startswith('coupon_'):
        try:
            # –ü–∞—Ä—Å–∏–Ω–≥ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤: coupon_<collaboration>_<admin>_<location>
            params = args[1].split('_')
            collaboration_id = int(params[1])
            admin_tg_id = int(params[2])
            location_id = int(params[3])

            # –í—ã–∑–æ–≤ —Ñ—É–Ω–∫—Ü–∏–∏ –≤—ã–¥–∞—á–∏ –∫—É–ø–æ–Ω–∞
            coupon_service = CouponService(session)
            result = await coupon_service.issue_coupon_to_client(
                client_id=message.from_user.id,
                collaboration_id=collaboration_id,
                admin_tg_id=admin_tg_id,
                location_id=location_id
            )
            await message.answer(result)
            return  # –ü—Ä–µ—Ä—ã–≤–∞–µ–º –¥–∞–ª—å–Ω–µ–π—à—É—é –æ–±—Ä–∞–±–æ—Ç–∫—É
        except Exception as e:
            await message.answer(f"üö´ –û—à–∏–±–∫–∞ –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ –∫—É–ø–æ–Ω–∞: {str(e)}")
    
    # –°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ /start
    auth_service = AuthService(session)
    user, exists = await auth_service.get_or_create_user(
        tg_id=message.from_user.id,
        first_name=message.from_user.first_name,
        last_name=message.from_user.last_name or "",
        username=message.from_user.username or ""
    )
    await state.clear()
    role_service = RoleService(session)
    user_roles = await role_service.get_user_roles(message.from_user.id)

    if user_roles or exists:
        await message.answer(
            "üëã –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ ReferralBot!",
            reply_markup=await main_menu(session, message.from_user.id)
        )
    else:
        await state.set_state(RegistrationStates.CHOOSING_ROLE)
        builder = ReplyKeyboardBuilder()
        builder.row(KeyboardButton(text="–Ø –∫–ª–∏–µ–Ω—Ç"))
        builder.row(KeyboardButton(text="–Ø –ø–∞—Ä—Ç–Ω–µ—Ä (–∫–æ–º–ø–∞–Ω–∏—è)"))
        await message.answer(
            "üëã –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å! –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø –≤–∞—à–µ–≥–æ –∞–∫–∫–∞—É–Ω—Ç–∞:\n\n"
            "‚ÑπÔ∏è –û–¥–∏–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –º–æ–∂–µ—Ç —Å–æ–∑–¥–∞—Ç—å –¥–æ 5 –∫–æ–º–ø–∞–Ω–∏–π",
            reply_markup=builder.as_markup(resize_keyboard=True)
        )

@router.message(Command("regcomp"))
async def regcomp(message: Message, state: FSMContext):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start —Å —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–µ–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
    await partner_selected(message=message, state=state)

@router.message(Command("cancel"), ~StateFilter(default_state))
async def cancel_registration(message: Message, state: FSMContext):
    """–û—Ç–º–µ–Ω–∞ –ø—Ä–æ—Ü–µ—Å—Å–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏"""
    await state.clear()
    await message.answer(
        "‚ùå –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –æ—Ç–º–µ–Ω–µ–Ω–∞",
        reply_markup=ReplyKeyboardRemove()
    )